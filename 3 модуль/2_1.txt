#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>

#define BUF_SIZE 10

int main(int argc, char *argv[]) {
    if(argc != 2) {
        printf("Usage: %s <number of random numbers>\n", argv[0]);
        return 1;
    }

    int numRandomNumbers = atoi(argv[1]);

    int pipefd[2];
    if(pipe(pipefd) == -1) {
        perror("pipe");
        return 1;
    }

    pid_t pid = fork();

    if(pid < 0) {
        perror("fork");
        return 1;
    }

    if(pid > 0) { // Parent process
        close(pipefd[1]); // Close write end of pipe

        FILE *file = fopen("random_numbers.txt", "w");
        if(file == NULL) {
            perror("fopen");
            return 1;
        }

        int randNum;
        for(int i = 0; i < numRandomNumbers; i++) {
            read(pipefd[0], &randNum, sizeof(randNum));
            printf("%d\n", randNum);
            fprintf(file, "%d\n", randNum);
        }

        fclose(file);
        close(pipefd[0]); // Close read end of pipe

        wait(NULL); // Wait for child process to complete
    } else { // Child process
        close(pipefd[0]); // Close read end of pipe

        srand(time(NULL));

        int randNum;
        for(int i = 0; i < numRandomNumbers; i++) {
            randNum = rand() % 100;
            write(pipefd[1], &randNum, sizeof(randNum));
        }

        close(pipefd[1]); // Close write end of pipe
    }

    return 0;
}